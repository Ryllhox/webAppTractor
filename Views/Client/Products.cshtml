@model List<Product>

@{
    ViewData["Title"] = "Товары";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-12">
            <form method="get" action="@Url.Action("Products", "Client")">
                <!-- Скрытое поле для передачи categoryId -->
                <input type="hidden" name="categoryId" value="@ViewBag.CurrentCategoryId" />
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="minPrice">Мин. цена:</label>
                            <input type="range" class="form-control-range" name="minPrice" id="minPrice" min="1000" max="10000000" value="1000" oninput="updateMinPrice(event)" />
                            <p id="minPriceValue">1 000</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="maxPrice">Макс. цена:</label>
                            <input type="range" class="form-control-range" name="maxPrice" id="maxPrice" min="50000" max="10000000" value="10000000" oninput="updateMaxPrice(event)" />
                            <p id="maxPriceValue">10 000 000</p>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="minPower">Мин. мощность:</label>
                            <input type="range" class="form-control-range" name="minPower" id="minPower" min="1" max="500" value="1" oninput="updateMinPower(event)" />
                            <p id="minPowerValue">1</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="maxPower">Макс. мощность:</label>
                            <input type="range" class="form-control-range" name="maxPower" id="maxPower" min="1" max="500" value="500" oninput="updateMaxPower(event)" />
                            <p id="maxPowerValue">500</p>
                        </div>
                    </div>

                </div>
                <div class="form-group pt-4">
                    <button type="submit" class="btn btn-primary" style="transform: scale(0.9); transition: transform 0.5s;">Фильтровать</button>
                </div>
            </form>
        </div>
    </div>

    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 shadow" style="opacity: 0; transform: translateY(20px); transition: opacity 0.5s, transform 0.5s;">
                    @if (!string.IsNullOrEmpty(product.ImagePath))
                    {
                        <img class="card-img-top" src="@Url.Content($"{product.ImagePath}")" alt="@product.Name">
                    }
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">
                            <strong>Цена:</strong> @product.Price<br />
                            <strong>Мощность:</strong> @product.Power<br />
                            <strong>Доступность:</strong> @product.Availability
                        </p>
                    </div>
                    <div class="card-footer">
                        <a href="@Url.Action("Details", "Client", new { id = product.Id })" class="btn btn-primary">Подробнее</a>
                    </div>
                </div>
            </div>
        }
    </div>

    <script>

        function updateMinPrice(event) {
            document.getElementById('minPriceValue').textContent = event.target.value;
        }

        function updateMaxPrice(event) {
            document.getElementById('maxPriceValue').textContent = event.target.value;
        }

        function updateMinPower(event) {
            document.getElementById('minPowerValue').textContent = event.target.value;
        }

        function updateMaxPower(event) {
            document.getElementById('maxPowerValue').textContent = event.target.value;
        }

        function setMinPrice(minPrice) {
            document.getElementById('minPrice').setAttribute('min', minPrice);
            document.getElementById('minPrice').setAttribute('value', minPrice);
            document.getElementById('minPriceValue').textContent = minPrice;
        }

        function setMaxPrice(maxPrice) {
            document.getElementById('maxPrice').setAttribute('max', maxPrice);
            document.getElementById('maxPrice').setAttribute('value', maxPrice);
            document.getElementById('maxPriceValue').textContent = maxPrice;
        }

        // Add event listeners to animate the submit button
        document.addEventListener("DOMContentLoaded", function () {
            var cards = document.querySelectorAll(".card");
            cards.forEach(function (card) {
                card.style.opacity = 1;
                card.style.transform = "translateY(0)";
            });
        });
    </script>
</div>